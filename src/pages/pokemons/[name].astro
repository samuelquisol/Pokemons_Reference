---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async () => {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await res.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: { name: name },
    props: { name: name, url: url },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);

const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title=`Pokemon | #${id} ${name}`
  description=`Information about ${name}`
  image={imageSrc}
>
  <button onclick="history.back()" class="text-blue-500 mx-20">‚Üê Go Back</button
  >
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div>
        <Title>{name}</Title>
      </div>

      <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
        <Icon name="heart-empty" size={50} />
        <Icon class="hidden" name="heart-filled" size={50} />
      </button>
    </div>

    <br />
    <PokemonCard url={url} name={name} isBig />
    <audio controls class="mb-5">
      <source src={audioSrc} type="audio/ogg" />
    </audio>
  </section>
</MainLayout>

<script>
  interface FavoritePokemon {
    name: String;
    id: Number;
  }

  document.addEventListener("astro:page-load", () => {
    const btnFavoritePokemon = document.querySelector(
      "#btn-favorite"
    ) as HTMLButtonElement;

    if (!btnFavoritePokemon) return;

    const pokemonName = btnFavoritePokemon.dataset.name;
    const pokemonId = btnFavoritePokemon.dataset.id;

    btnFavoritePokemon.addEventListener("click", () => {
      console.log(pokemonName, pokemonId);
    });
  });
</script>

<style>
  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
